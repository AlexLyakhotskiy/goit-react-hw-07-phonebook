{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/LoaderSpinner/LoaderSpinner.module.scss","redux/contacts/contacts-actions.js","utils/functions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","components/LoaderSpinner/LoaderSpinner.js","pages/HomePage.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","getArrayFromObject","data","Object","keys","map","key","id","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getFiltredContact","createSelector","name","toLowerCase","includes","initialState","number","ContactForm","useState","contact","setContact","useSelector","dispatch","useDispatch","handleChangeInput","e","target","value","prev","className","styles","wrapper","onSubmit","preventDefault","contactToAdd","find","el","findDuplicateContact","alert","a","post","addContact","form","label","onChange","type","input","pattern","title","required","button","ContactList","filtredContacts","list","item","text","onClick","contactId","delete","Container","children","Filter","LoaderSpinner","container","color","height","width","HomePage","useEffect","get","App","createReducer","_","payload","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d3654d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1QQgq\",\"text\":\"ContactList_text__U04Ac\",\"button\":\"ContactList_button__2ebWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2AcrP\",\"input\":\"Filter_input__24VhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1RNxS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoaderSpinner_container__1cvL1\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contacts/getContactsRequest');\r\nexport const getContactsSuccess = createAction('contacts/getContactsSuccess');\r\nexport const getContactsError = createAction('contacts/getContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","export function getArrayFromObject(data) {\r\n  if (!data) {\r\n    return [];\r\n  }\r\n  return Object.keys(data).map(key => ({ ...data[key], id: key }));\r\n}\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\nimport { getArrayFromObject } from '../../utils/functions';\r\n\r\n// everything that is commented out for json-server\r\n// axios.defaults.baseURL = 'http://localhost:4040';\r\naxios.defaults.baseURL =\r\n  'https://phonebook-4ec2d-default-rtdb.europe-west1.firebasedatabase.app/';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    // const { data } = await axios.get('/contacts');\r\n    const { data } = await axios.get('/contacts.json');\r\n    dispatch(\r\n      getContactsSuccess(\r\n        // data\r\n        getArrayFromObject(data),\r\n      ),\r\n    );\r\n  } catch (error) {\r\n    dispatch(getContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n  try {\r\n    // const { data } = await axios.post('/contacts', contact);\r\n    const { data } = await axios.post('/contacts.json', contact);\r\n    dispatch(\r\n      addContactSuccess(\r\n        // data\r\n        { ...contact, id: data.name },\r\n      ),\r\n    );\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    // await axios.delete(`/contacts/${contactId}`);\r\n    await axios.delete(`/contacts/${contactId}.json`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getFiltredContact = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst initialState = { name: '', number: '' };\r\n\r\nexport default function ContactForm() {\r\n  const [contact, setContact] = useState({ ...initialState });\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeInput = e => {\r\n    const { name, value } = e.target;\r\n    setContact(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (findDuplicateContact(contact)) {\r\n      alert(`${contact.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(addContact(contact));\r\n    setContact({ ...initialState });\r\n  };\r\n\r\n  function findDuplicateContact(contact) {\r\n    const contactToAdd = contact.name.toLowerCase();\r\n    return contacts.find(el => el.name.toLowerCase() === contactToAdd);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            value={contact.name}\r\n            onChange={handleChangeInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={styles.input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            value={contact.number}\r\n            onChange={handleChangeInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={styles.input}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\nimport { getFiltredContact } from '../../redux/contacts/contacts-selectors';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const filtredContacts = useSelector(getFiltredContact);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={styles.list}>\r\n      {filtredContacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.item}>\r\n          <p className={styles.text}>{name}:</p>\r\n          <p className={styles.text}>{number}</p>\r\n          <button\r\n            onClick={() => dispatch(deleteContact(id))}\r\n            className={styles.button}\r\n            type=\"button\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\n\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        value={value}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n        className={styles.input}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import Loader from 'react-loader-spinner';\r\n\r\nimport styles from './LoaderSpinner.module.scss';\r\n\r\nconst LoaderSpinner = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Loader type=\"Oval\" color=\"#2196f3\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderSpinner;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport ContactForm from '../components/ContactForm';\r\nimport ContactList from '../components/ContactList';\r\nimport Container from '../components/Container';\r\nimport Filter from '../components/Filter';\r\nimport LoaderSpinner from '../components/LoaderSpinner/LoaderSpinner';\r\n\r\nimport { getContacts } from '../redux/contacts/contacts-operations';\r\nimport { getLoading } from '../redux/contacts/contacts-selectors';\r\n\r\nexport default function HomePage() {\r\n  const loading = useSelector(getLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n      {loading && <LoaderSpinner />}\r\n    </Container>\r\n  );\r\n}\r\n","import HomePage from './pages/HomePage';\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [getContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter, loading, error });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport logger from 'redux-logger';\r\n\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: { contacts: contactsReducer },\r\n  middleware,\r\n  // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\n\nimport { store } from './redux/store';\n\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__1JTRI\",\"form\":\"ContactForm_form__3SeSy\",\"label\":\"ContactForm_label__1Y6Ca\",\"input\":\"ContactForm_input__BWyoC\",\"button\":\"ContactForm_button__18LpF\"};"],"sourceRoot":""}